2011-12-08  Zoltan Bojthe

    * fixes for PAUSE frames: set dest address to MULTICAST_PAUSE_ADDRESS
      if it was unspecified

    * MACRelayUnitNP/PP: calculate PAUSE finish times based on the txrate
      of the corresponding ports

    * Added EtherFrameClassifier for QoS queues

    * EthernetInterface:
      - moved queue module to between EtherEncap and EtherMAC modules;
      - use QoS queue
      - use empty string instead of "NoQueue" to select the internal queue

    * EtherMAC, EtherMACFullDuplex, EtherMACBase:
      - implemented 40G, 100G Ethernet
      - the "duplexEnabled" parameter was renamed to "duplexMode"
      - EtherMACFullDuplex now throws an error when you try to configure it
        to be half-duplex
      - the "carrierExtension" NED parameter was removed (as it is not really
        an option: it is mandatory for Gigabit Ethernet in half duplex mode)
      - refactoring: moved several functions from EtherMACBase to EtherMAC/
        EtherMACFullDuplex for readability, and simplified  EtherMACFullDuplex
        by removing halfduplex-related code
      - bugfix: do not count PREAMBLE and SFX into the frame length when
        padding frames to the minimal length
      - bugfix: slot time for Fast Ethernet and Gigabit Ethernet was wrong
      - bugfix: the original inner queue stored the PAUSE frames in reverse
        order at the top of queue; we now cQueue with compare function as
        a priority queue
      - bugfix: when a transmission was finished, and a PAUSE frame had
        been received during the transmission, then the sent frame was not
        deleted but retransmitted when the PAUSE time elapsed
      - bugfix for EtherMACFullDuplex: PAUSE frames with bit errors were
        not discarded
      - emit only one signal when sending up a frame (removed passedUpPkBytes
        signal)
      - changed emitted values in most signals: emit packet objects instead of
        byte counts
      - removed NotificationBoard support (one can use signals instead
        where needed)
      - do not calculate txrate-related parameters when module is not connected
      - added more error detections
      - fixes for dest address check on received messages (will need to be
        revised when implementing management of multicast address)
      - changed maximum cable length violation limits to be based on meters
      - some fixes for reconnecting (incomplete)

    * Ethernet.h: renamed some constants for readability

    * Renamed EtherPadding message to EtherIFG

    * Added SNAP support (also added TODO notes to linklayer/ieee80211, and
      networklayer/arp|ipv6|manetrouting that they should set the etherType)

    * ARP: set correct etherType on outgoing packets

    * bugfix: buffer was too small for some sprintf() statements

    * added missing @labels to NED files

    * EtherBus: bugfix (used tap[-1] if only one node was connected)

    * added examples

    * comments editing, code styling, optimizations, added TODOs

2008-07-26  Andras Varga

    * EtherMAC2: refactored to use cGate::getDatarateChannel()

2008-07-07  Andras Varga

    * removed utils.h/cc: no longer needed with OMNeT++ 4.0 (which has
      built-in message IDs, message tree IDs and sequence chart
      visualization)

    * EtherMAC2: performance: only fire notifications if someone is listening

    * EtherMAC2: made notification consistent with PPP: use TxDetails as
      "details" object

    * EtherMAC, EtherMAC2: performance: remember output gate pointer
      instead of looking it up for each send()

2008-06-29  Andras Varga

    * moved class declarations from .cc files into separate .h files
      for EtherHub, EtherLLC, EtherEncap, etc

2006-XX-XX Levente Meszaros

    * created EtherMAC2, which is a simplified, duplex-only version of
      EtherMAC (i.e. it does not contain the CSMA/CD algorithm)

2004-05-10  Andras Varga

    * EtherMAC: auto MAC address assignment

    * EtherMAC: auto-configuration of transmission rate and duplex/half duplex i
      mode.

    * it's no longer an error if EtherMAC is not connected to the network
      ("unplugged cable")

    * elaboration of Ethernet frame types: Ethernet II, 802.3 with LLC,
      802.3 with LLC and SNAP.

    * added EtherEncap, which does encapsulation/decapsulation with
      Ethernet II frames.

    * communication between LLC and higher layers changed: now it uses
      controlInfo() as introduced in OMNeT++ 3.0

    * PAUSE handling fixed: PAUSE frames to be sent have now priority
      in the MAC (they overtake normal frames in the queue).
      MACRelayUnits: minimal time interval introduced that must elapse
      before sending another PAUSE frame.

    * new example network: models a very large Ethernet LAN. Ini files
      for old example networks available in test/ subdir.

    * sample application changed to EtherAppCli+EtherAppSrv. EtherAppCli
      sends requests of at configurable intervals to EtherAppSrv.
      Each request contains how many bytes EtherAppSrv should send back
      in response. If this number is 0, no frames are sent; if it is
      larger than ~1500, several frames are sent back.

2004-01-20  Andras Varga

    * Various fixes on the switch model:
    - address table reading was broken
    - fixed bug in MACRelayUnitNP and PP (referencing a deleted message)
    - fixed crash at removing aged entries from table
    - zero addressTableSize to mean unlimited table
    - table management: if table full, throw out oldest entry

