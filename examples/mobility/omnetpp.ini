[General]
#scheduler-class = "cRealTimeScheduler" #so that speed appears realistic
#debug-on-errors = true
tkenv-plugin-path = ../../../etc/plugins

*.numHosts = 2
**.constraintAreaWidth = 600m
**.constraintAreaHeight = 400m
**.debug = true

**.host*.mobility.initFromDisplayString = false

[Config NullMobility]
network = MobileNet
*.numHosts = 3
**.host*.mobilityType = "NullMobility"
# place it at a fixed position:
**.host[0].mobility.initialX = 50m
**.host[0].mobility.initialY = 200m
**.host[0].mobility.initFromDisplayString = false
# the second node is using the display string position (or placed randomly if position is not present in display string)
**.host[1].mobility.initFromDisplayString = true
# place it at a random position:
**.host[2].mobility.initFromDisplayString = false

[Config LinearMobility]
network = MobileNet
**.host*.mobilityType = "LinearMobility"
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.speed = 50mps
**.host*.mobility.angle = 30deg  # degrees
**.host*.mobility.acceleration = -0.5
**.host*.mobility.updateInterval = 100ms

[Config MassMobility]
network = MobileNet
*.numHosts = 5
**.host*.mobilityType = "MassMobility"
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
**.host*.mobility.speed = truncnormal(15mps, 5mps)
**.host*.mobility.updateInterval = 100ms

[Config MassMobilityWithScenario]
network = MobileNetWithScenario
*.numHosts = 5
**.host*.mobilityType = "MassMobility"
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.changeInterval = truncnormal(2s, 0.5s)
**.host*.mobility.changeAngleBy = normal(0deg, 30deg)
**.host*.mobility.speed = truncnormal(15mps, 5mps)
**.host*.mobility.updateInterval = 100ms
**.scenarioManager.script = xmldoc("scenario.xml")

[Config RandomWPMobility]
network = MobileNet
*.numHosts = 5
**.host*.mobilityType = "RandomWPMobility"
**.host*.mobility.initFromDisplayString = false
**.host*.mobility.speed = uniform(20mps,50mps)
**.host*.mobility.waitTime = uniform(3s,8s)
**.host*.mobility.updateInterval = 100ms

[Config CircleMobility1]
network = MobileNet
*.numHosts = 3
**.host*.mobilityType = "CircleMobility"
**.host*.mobility.cx = 200m
**.host*.mobility.cy = 200m
**.host*.mobility.r = 150m
**.host*.mobility.speed = 40mps
**.host[0].mobility.startAngle = 0
**.host[1].mobility.startAngle = 120deg
**.host[2].mobility.startAngle = 240deg
**.host*.mobility.updateInterval = 100ms

[Config CircleMobility2]
network = MobileNet
*.numHosts = 3
**.host*.mobilityType = "CircleMobility"
**.host[0].mobility.cx = 100m
**.host[1].mobility.cx = 300m
**.host[2].mobility.cx = 500m
**.host*.mobility.cy = 200m
**.host*.mobility.r = 150m
**.host*.mobility.speed = 40mps
**.host*.mobility.startAngle = 0
**.host*.mobility.updateInterval = 100ms

[Config RectangleMobility]
network = MobileNet
**.host*.mobilityType = "RectangleMobility"
**.host*.mobility.constraintAreaX = 100m
**.host*.mobility.constraintAreaY = 100m
**.host*.mobility.constraintAreaWidth = 400m
**.host*.mobility.constraintAreaHeight = 200m
#**.host*.mobility.x1 = 100
#**.host*.mobility.y1 = 100
#**.host*.mobility.x2 = 500
#**.host*.mobility.y2 = 300
**.host[0].mobility.startPos = 0
**.host[1].mobility.startPos = 2.5
**.host[0].mobility.speed = 20mps
**.host[1].mobility.speed = -10mps
**.host*.mobility.updateInterval = 100ms

[Config TurtleMobility1]
network = MobileNet
description = "square"
*.numHosts = 1
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='1']")

[Config TurtleMobility2]
network = MobileNet
description = "two squares"
*.numHosts = 1
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='2']")

[Config TurtleMobility3]
network = MobileNet
description = "random waypoint"
*.numHosts = 2
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='3']")

[Config TurtleMobility4]
network = MobileNet
description = "mass+reflect"
*.numHosts = 2
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='4']")

[Config TurtleMobility5]
network = MobileNet
description = "mass+wrap"
*.numHosts = 2
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='5']")

[Config TurtleMobility6]
network = MobileNet
description = "mass+placerandomly"
*.numHosts = 2
**.host*.mobilityType = "TurtleMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.turtleScript = xmldoc("turtle.xml", "movements//movement[@id='6']")

[Config ANSimMobility]
network = MobileNet
**.host*.mobilityType = "ANSimMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.ansimTrace = xmldoc("ansimtrace.xml")
**.host*.mobility.nodeId = -1  #means "host module's index"

[Config BonnMotionMobility1]
network = MobileNet
description = "2 hosts"
**.host*.mobilityType = "BonnMotionMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.traceFile = "bonnmotion_small.movements"
**.host*.mobility.nodeId = -1  #means "host module's index"

[Config BonnMotionMobility2]
network = MobileNet
description = "100 hosts"
*.numHosts = 100
**.host*.mobilityType = "BonnMotionMobility"
**.host*.mobility.updateInterval = 100ms
**.host*.mobility.traceFile = "bonnmotion_scenario.movements"
**.host*.mobility.nodeId = -1  #means "host module's index"

